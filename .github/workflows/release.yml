 

name: Build Release


on:
  push:
    tags: 
      - 'v*'
  pull_request:
    branches:
     - 'release/**'


jobs:
  upload-release:

    runs-on: ubuntu-18.04
    needs: [build-linux, build-windows]

    steps:
    - uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false   

    - name: download artifacts
      uses: actions/download-artifact@v1
      with:
        name: uploads    

    - name: upload linux
      id: upload-linux
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/diagrammable.{{github_ref}}.appimage
        asset_name: diagrammable.{{github_ref}}.appimage
        

    - name: upload windows
      id: upload-windows
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./uploads/diagrammable.{{github_ref}}.msi
        asset_name: diagrammable.{{github.ref}}.msi
        asset_content_type: application/x-ms-installer



  build-linux:

    runs-on: ubuntu-18.04
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: false


    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout Source 
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: ''

    - name: Install dependencies
      run: npm install --force

    - name: Build electron package
      run: npm run electron:package:linux
      env:
         CI: false

    - name: upload linux artifact
      uses: actions/upload-artifact@v1
      with:
        name: uploads
        path: diagrammable.{github.ref}.appimage     



  build-windows:

    runs-on: windows-2022
    env:
      CSC_IDENTITY_AUTO_DISCOVERY: false

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Checkout Source 
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: ''

    - name: Install dependencies
      run: npm install --force

    - name: Build electron package
      run: npm run electron:package:win
      env:
         CI: false

    - name: upload windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: uploads
        path: 'dist/diagrammable*.msi'




